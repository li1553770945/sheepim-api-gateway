// Code generated by hertz generator.

package user

import (
	"context"
	"github.com/cloudwego/hertz/pkg/common/utils"
	"github.com/li1553770945/sheepim-api-gateway/biz/constant"
	"github.com/li1553770945/sheepim-api-gateway/biz/infra/container"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/assembler"
	"github.com/li1553770945/sheepim-api-gateway/biz/middleware"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	user "github.com/li1553770945/sheepim-api-gateway/biz/model/user"
)

// GetUserInfo .
// @router /api/user/user-info [GET]
func GetUserInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.GetUserInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(consts.StatusOK, utils.H{
			"code":    constant.InvalidInput,
			"message": "参数校验失败:" + err.Error(),
		})
		return
	}
	App := container.GetGlobalContainer()
	resp := App.UserController.GetUserInfo(ctx, &req)
	c.JSON(consts.StatusOK, resp)
}

// GetSelfInfo .
// @router /api/users/me [GET]
func GetSelfInfo(ctx context.Context, c *app.RequestContext) {
	userInfo, err := middleware.GetUserInfoFromCtx(ctx)
	if err != nil {
		c.JSON(consts.StatusOK, utils.H{
			"code":    constant.SystemError,
			"message": err.Error(),
		})
		return
	}
	userInfoHttpResp := assembler.UserRespRpcToHttp(userInfo)
	c.JSON(consts.StatusOK, userInfoHttpResp)
}
