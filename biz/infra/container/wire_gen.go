// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/li1553770945/sheepim-api-gateway/biz/infra/config"
	"github.com/li1553770945/sheepim-api-gateway/biz/infra/log"
	"github.com/li1553770945/sheepim-api-gateway/biz/infra/rpc"
	"github.com/li1553770945/sheepim-api-gateway/biz/infra/trace"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/controller/auth"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/controller/feedback"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/controller/file"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/controller/project"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/controller/room"
	"github.com/li1553770945/sheepim-api-gateway/biz/internal/controller/user"
)

// Injectors from wire.go:

func GetContainer(env string) *Container {
	configConfig := config.GetConfig(env)
	traceSturct := trace.InitTrace(configConfig)
	logger := log.InitLog()
	client := rpc.NewUserClient(configConfig)
	iUserController := user.NewUserController(client)
	authserviceClient := rpc.NewAuthClient(configConfig)
	iAuthController := auth.NewAuthController(authserviceClient)
	projectserviceClient := rpc.NewProjectClient(configConfig)
	iProjectController := project.NewProjectController(projectserviceClient)
	feedbackserviceClient := rpc.NewFeedbackClient(configConfig)
	iFeedbackController := feedback.NewFeedbackController(feedbackserviceClient)
	roomserviceClient := rpc.NewRoomClient(configConfig)
	iRoomController := room.NewRoomController(roomserviceClient)
	fileserviceClient := rpc.NewFileClient(configConfig)
	iFileController := file.NewFileController(fileserviceClient)
	container := NewContainer(configConfig, traceSturct, logger, iUserController, iAuthController, iProjectController, iFeedbackController, iRoomController, iFileController, authserviceClient, client, fileserviceClient)
	return container
}
